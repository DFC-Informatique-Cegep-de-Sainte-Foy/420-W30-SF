@startuml Version1

interface IContenant
{
    + {abstract} VolumeContenant : decimal <<get>>
    + {abstract} VolumeMaximum : decimal <<get>>
    + {abstract} VolumeLiquides : decimal <<get>>
    + {abstract} Nom : string <<get>>
    + {abstract} AjouterLiquide(p_liquide : ILiquide)
    + {abstract} Verser(p_quantiteMl : decimal)
}

abstract class Contenant
{
    - m_liquides : List<ILiquide>
    + VolumeContenant : decimal <<get>>
    + VolumeMaximum : decimal <<get>>
    + VolumeLiquides : decimal <<get>>
    + Nom : string <<get>>
    + ctor(p_nom : string, p_volume : decimal)
    + AjouterLiquide(p_liquide : ILiquide)
    + Verser(p_quantiteMl : decimal)
    + ToString() : string <<override>>
}

class Bol {
    + ctor()
}

class Tasse {
    + ctor()
}

IContenant <|.. Contenant

Contenant <|-- Bol

Contenant <|-- Tasse

interface ILiquide
{
    + {abstract} Volume : decimal <<get>>
    + {abstract} Nom : string <<get>>
    + {abstract} DiminuerVolume(p_pourcentage : decimal)
}

abstract class Liquide
{
    + Volume : decimal <<get>> <<private set>>
    + Nom : string <<get>>
    + ctor(p_nom : string, p_volume : decimal)
    + DiminuerVolume(p_pourcentage : decimal)
    + ToString() : string <<override>>
}

ILiquide  <.left.   IContenant

Contenant "1" -right-> "n" ILiquide 

ILiquide <|.. Liquide

class Cafe {
    + ctor()
}

class Chocolat{
    + ctor()
}

class Creme {
    + ctor()
}

class Lait {
    + ctor()
}

Liquide <|-- Cafe
Liquide <|-- Chocolat
Liquide <|-- Creme
Liquide <|-- Lait

@enduml
