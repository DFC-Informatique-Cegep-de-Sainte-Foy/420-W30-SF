@startuml Exercice03_PropSol

skinparam classAttributeIconSize 0
skinparam class {
    BackgroundColor White
    BorderColor #000
}


ATM "1" --> "1" ICreateurTransaction
ATM "1" --> "1" ITiroirArgent

ATM ..> Compte
ATM ..> ITransaction

ITransaction <|.. TransactionRetrait
ITransaction <.. ICreateurTransaction

ITiroirArgent <|.. TiroirArgentCOM
ITiroirArgent <|.. TiroirArgentLPT
ITiroirArgent <|.. TiroirArgentUSB

ICreateurTransaction <|.. CreateurTransactionDesjardins
ICreateurTransaction <|.. CreateurTransactionScotia
ICreateurTransaction <|.. CreateurTransactionCIBC

class ATM {

    - m_createurTransaction : ICreateurTransaction
    - m_tiroirArgent : ITiroirArgent

    + ATM(p_tiroirArgent : ITiroirArgent, p_createurTransaction : ICreateurTransaction)
    + Retirer(p_compte : Compte, p_montant : decimal)
}

class Compte {

}

interface ITiroirArgent {
    + DistribuerArgent(p_montant : decimal)
}

interface ITransaction {
   + EstValide() : bool
   + ConfirmerTransaction()
   + Annuler()
}

interface ICreateurTransaction {
    + CreerTransactionRetrait(p_compte : Compte, p_montant : decimal) : ITransaction
}

class CreateurTransactionDesjardins {
    + CreerTransactionRetrait(p_compte : Compte, p_montant : decimal) : ITransaction
}

class CreateurTransactionScotia {
    + CreerTransactionRetrait(p_compte : Compte, p_montant : decimal) : ITransaction
}

class CreateurTransactionCIBC {
    + CreerTransactionRetrait(p_compte : Compte, p_montant : decimal) : ITransaction
}

class TiroirArgentCOM {
    + DistribuerArgent(p_montant : decimal)
}

class TiroirArgentLPT {
    + DistribuerArgent(p_montant : decimal)
}

class TiroirArgentUSB {
    + DistribuerArgent(p_montant : decimal)
}

class TransactionRetrait {
   + EstValide() : bool
   + ConfirmerTransaction()
   + Annuler()
}


@enduml